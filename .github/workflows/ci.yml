name: build
on:
  push:

jobs:

  build:
    name: build
    runs-on: ubuntu-latest
    steps:

    - name: Check out repository code
      uses: actions/checkout@v3

    - name: Setup Golang
      uses: actions/setup-go@v3
      with:
        go-version: 1.19

    - name: install golangci-lint
      run: curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $GITHUB_WORKSPACE v1.49.0

    - name: run linters
      run: $GITHUB_WORKSPACE/golangci-lint run ./...

    - name: build and push latest image
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      run: |
        docker build -t adobromilskiy/quake3-stats:latest .
        docker login --username ${{ secrets.DOCKERHUB_USER }} --password ${{ secrets.DOCKERHUB_PASSWD }}
        docker push adobromilskiy/quake3-stats:latest

    - name: build and push tagged image
      if: github.event_name == 'push' && github.event.ref_type == 'tag'
      run: |
        GIT_TAG="${GITHUB_REF#refs/tags/}"
        docker build -t adobromilskiy/quake3-stats:${GIT_TAG} .
        docker login --username ${{ secrets.DOCKERHUB_USER }} --password ${{ secrets.DOCKERHUB_PASSWD }}
        docker push adobromilskiy/quake3-stats:${GIT_TAG}
        docker tag adobromilskiy/quake3-stats:${GIT_TAG} adobromilskiy/quake3-stats:latest
        docker push adobromilskiy/quake3-stats:latest

      - name: Make frontend archive
        run: |
          cd nginx
          tar -czf $GITHUB_WORKSPACE/html.tar.gz html

      - name: Deploy frontend archive
        uses: cross-the-world/ssh-scp-ssh-pipelines@latest
        env:
          USER: ${{ secrets.USER }}
        with:
          host: ${{ secrets.HOST }}
          user: ${{ secrets.USER }}
          pass: ${{ secrets.PASSWORD }}
          scp: |
            $GITHUB_WORKSPACE/html.tar.gz => /home/${{ secrets.USER }}
          last_ssh: |
            sudo mv /home/${{ secrets.USER }}/html.tar.gz ${{ secrets.PROJECT_PATH }}
            cd ${{ secrets.PROJECT_PATH }}
            sudo tar -xzf html.tar.gz
            sudo chown -R www-data:www-data ${{ secrets.PROJECT_PATH }}
            sudo find ${{ secrets.PROJECT_PATH }} -type d -exec chmod 775 {} +
            sudo find ${{ secrets.PROJECT_PATH }} -type f -exec chmod 664 {} +
            sudo rm html.tar.gz